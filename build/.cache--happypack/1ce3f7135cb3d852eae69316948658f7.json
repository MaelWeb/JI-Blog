{"remainingRequest":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js?{\"presets\":[]}!/Users/mael.liang/Workspace/node-koa-test/web/components/EditorMd/index.js","dependencies":[{"path":"/Users/mael.liang/Workspace/node-koa-test/web/components/EditorMd/index.js","mtime":1518000904000},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire('./editormd.less');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar loadEditorMD = function loadEditorMD() {\n    return new _promise2.default(function (resolve, reject) {\n        if (window.editormd) {\n            resolve(true);\n        } else {\n            var script = document.createElement(\"script\");\n            script.async = true;\n            script.onload = function () {\n                resolve(true);\n            };\n            script.onerror = function () {\n                reject(false);\n            };\n            script.src = '//static.liayal.com/editormd/editormd.min.js';\n            document.head.appendChild(script);\n        }\n    });\n};\n// import jQuery from 'jquery';\n// import editormd from './editormd';\n\nvar defaultConfig = {\n    // 组件接入方，并不需要知道具体ID\n    id: 'EditorID' + +new Date(),\n    width: \"100%\",\n    height: 740,\n    // 静态资源路径\n    path: '//static.liayal.com/editormd/lib/',\n    // theme : \"dark\",\n    // previewTheme : \"dark\",\n    // editorTheme : \"pastel-on-dark\",\n    markdown: '### \\u8BF7\\u5F00\\u59CB\\u4F60\\u7684\\u8868\\u6F14',\n    codeFold: true,\n    // syncScrolling : false,\n    saveHTMLToTextarea: true, // 保存 HTML 到 Textarea\n    searchReplace: true,\n    watch: true, // 关闭实时预览\n    htmlDecode: true, // 开启 HTML 标签解析，为了安全性，默认不开启\n    // toolbar  : false,             //关闭工具栏\n    // previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启\n    emoji: true,\n    taskList: true,\n    tocm: true, // Using [TOCM]\n    tex: true, // 开启科学公式TeX语言支持，默认关闭\n    flowChart: true, // 开启流程图支持，默认关闭\n    sequenceDiagram: true, // 开启时序/序列图支持，默认关闭,\n    // dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true\n    // dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true\n    // dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true\n    // dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1\n    // dialogMaskBgColor : \"#000\", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff\n    imageUpload: true,\n    imageFormats: [\"jpg\", \"jpeg\", \"gif\", \"png\", \"bmp\", \"webp\"],\n    imageUploadURL: \"/api/article/image/upload\",\n    onload: function onload() {}\n};\n\nvar Editor = function (_Component) {\n    (0, _inherits3.default)(Editor, _Component);\n\n    function Editor(props) {\n        (0, _classCallCheck3.default)(this, Editor);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Editor.__proto__ || (0, _getPrototypeOf2.default)(Editor)).call(this, props));\n\n        _this.state = {};\n        return _this;\n    }\n\n    (0, _createClass3.default)(Editor, [{\n        key: 'componentDidMount',\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var config, _config, id, width, height, path, theme, previewTheme, editorTheme, markdown, codeFold, syncScrolling, saveHTMLToTextarea, searchReplace, watch, htmlDecode, toolbar, previewCodeHighlight, emoji, taskList, tocm, tex, flowChart, sequenceDiagram, dialogLockScreen, dialogShowMask, dialogDraggable, dialogMaskOpacity, dialogMaskBgColor, imageUpload, imageFormats, imageUploadURL, _onload;\n\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                _context.next = 2;\n                                return loadEditorMD();\n\n                            case 2:\n                                config = this.props.config;\n\n                                config = (0, _assign2.default)({}, defaultConfig, config);\n\n                                _config = config, id = _config.id, width = _config.width, height = _config.height, path = _config.path, theme = _config.theme, previewTheme = _config.previewTheme, editorTheme = _config.editorTheme, markdown = _config.markdown, codeFold = _config.codeFold, syncScrolling = _config.syncScrolling, saveHTMLToTextarea = _config.saveHTMLToTextarea, searchReplace = _config.searchReplace, watch = _config.watch, htmlDecode = _config.htmlDecode, toolbar = _config.toolbar, previewCodeHighlight = _config.previewCodeHighlight, emoji = _config.emoji, taskList = _config.taskList, tocm = _config.tocm, tex = _config.tex, flowChart = _config.flowChart, sequenceDiagram = _config.sequenceDiagram, dialogLockScreen = _config.dialogLockScreen, dialogShowMask = _config.dialogShowMask, dialogDraggable = _config.dialogDraggable, dialogMaskOpacity = _config.dialogMaskOpacity, dialogMaskBgColor = _config.dialogMaskBgColor, imageUpload = _config.imageUpload, imageFormats = _config.imageFormats, imageUploadURL = _config.imageUploadURL, _onload = _config.onload;\n\n                                // 静态资源地址修改\n\n                                if (path !== defaultConfig.path) {\n                                    console.warn('Editor warning: Static resource address has changed, if you know exactly what you\\'re doing, ignore this warning');\n                                }\n\n                                this.editor = editormd(id, {\n                                    width: width,\n                                    height: height,\n                                    path: path,\n                                    theme: theme,\n                                    previewTheme: previewTheme,\n                                    editorTheme: editorTheme,\n                                    markdown: markdown,\n                                    codeFold: codeFold,\n                                    syncScrolling: syncScrolling,\n                                    saveHTMLToTextarea: saveHTMLToTextarea, // 保存 HTML 到 Textarea\n                                    searchReplace: searchReplace,\n                                    watch: watch, // 关闭实时预览\n                                    htmlDecode: htmlDecode, // 开启 HTML 标签解析，为了安全性，默认不开启\n                                    toolbar: toolbar, //关闭工具栏\n                                    previewCodeHighlight: previewCodeHighlight, // 关闭预览 HTML 的代码块高亮，默认开启\n                                    emoji: emoji,\n                                    taskList: taskList,\n                                    tocm: tocm, // Using [TOCM]\n                                    tex: tex, // 开启科学公式TeX语言支持，默认关闭\n                                    flowChart: flowChart, // 开启流程图支持，默认关闭\n                                    sequenceDiagram: sequenceDiagram, // 开启时序/序列图支持，默认关闭,\n                                    dialogLockScreen: dialogLockScreen, // 设置弹出层对话框不锁屏，全局通用，默认为true\n                                    dialogShowMask: dialogShowMask, // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true\n                                    dialogDraggable: dialogDraggable, // 设置弹出层对话框不可拖动，全局通用，默认为true\n                                    dialogMaskOpacity: dialogMaskOpacity, // 设置透明遮罩层的透明度，全局通用，默认值为0.1\n                                    dialogMaskBgColor: dialogMaskBgColor, // 设置透明遮罩层的背景颜色，全局通用，默认为#fff\n                                    imageUpload: imageUpload,\n                                    imageFormats: imageFormats,\n                                    imageUploadURL: imageUploadURL,\n                                    onload: function onload() {\n                                        _onload(this.editor, this);\n                                    }\n                                });\n\n                            case 7:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function componentDidMount() {\n                return _ref.apply(this, arguments);\n            }\n\n            return componentDidMount;\n        }()\n    }, {\n        key: 'getMarkdown',\n        value: function getMarkdown() {\n            return this.editor.getMarkdown();\n        }\n    }, {\n        key: 'getHTML',\n        value: function getHTML() {\n            var config = this.props.config;\n\n            config = (0, _assign2.default)({}, defaultConfig, config);\n            if (config.watch) {\n                return this.editor.getPreviewedHTML();\n            }\n            return editormd.markdownToHTML('_previewHtml', { markdown: this.editor.getMarkdown() }).html();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var config = this.props.config;\n\n            config = (0, _assign2.default)({}, defaultConfig, config);\n\n            return _react2.default.createElement(\n                'div',\n                { style: { width: config.width, height: config.height } },\n                _react2.default.createElement('div', { id: config.id }),\n                _react2.default.createElement('div', { id: '_previewHtml', style: { display: 'none' } })\n            );\n        }\n    }]);\n    return Editor;\n}(_react.Component);\n\nEditor.defaultProps = {\n    config: {}\n};\n\n\nvar defaultShowConfig = {\n    id: 'EditorShowID' + new Date().getTime(),\n    path: '//static.liayal.com/editormd/lib/',\n    gfm: true,\n    toc: true,\n    tocm: true,\n    tocStartLevel: 1,\n    tocTitle: '目录',\n    tocDropdown: true,\n    tocContainer: '',\n    markdown: 'what can i do for you',\n    markdownSourceCode: true,\n    htmlDecode: true,\n    autoLoadKaTeX: true,\n    pageBreak: true,\n    atLink: true,\n    emailLink: true,\n    tex: true,\n    taskList: true,\n    emoji: true,\n    flowChart: true,\n    sequenceDiagram: true,\n    previewCodeHighlight: true\n};\n\nvar EditorShow = function (_Component2) {\n    (0, _inherits3.default)(EditorShow, _Component2);\n\n    function EditorShow() {\n        (0, _classCallCheck3.default)(this, EditorShow);\n        return (0, _possibleConstructorReturn3.default)(this, (EditorShow.__proto__ || (0, _getPrototypeOf2.default)(EditorShow)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(EditorShow, [{\n        key: 'componentDidMount',\n        value: function () {\n            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n                var config, _config2, id, gfm, toc, tocm, tocStartLevel, tocTitle, tocDropdown, tocContainer, markdown, markdownSourceCode, htmlDecode, autoLoadKaTeX, pageBreak, atLink, emailLink, tex, taskList, emoji, flowChart, sequenceDiagram, previewCodeHighlight, path;\n\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return loadEditorMD();\n\n                            case 2:\n                                config = this.props.config;\n\n                                config = (0, _assign2.default)({}, defaultShowConfig, config);\n\n                                _config2 = config, id = _config2.id, gfm = _config2.gfm, toc = _config2.toc, tocm = _config2.tocm, tocStartLevel = _config2.tocStartLevel, tocTitle = _config2.tocTitle, tocDropdown = _config2.tocDropdown, tocContainer = _config2.tocContainer, markdown = _config2.markdown, markdownSourceCode = _config2.markdownSourceCode, htmlDecode = _config2.htmlDecode, autoLoadKaTeX = _config2.autoLoadKaTeX, pageBreak = _config2.pageBreak, atLink = _config2.atLink, emailLink = _config2.emailLink, tex = _config2.tex, taskList = _config2.taskList, emoji = _config2.emoji, flowChart = _config2.flowChart, sequenceDiagram = _config2.sequenceDiagram, previewCodeHighlight = _config2.previewCodeHighlight, path = _config2.path;\n\n\n                                this._init(path, function () {\n                                    editormd.markdownToHTML(id, {\n                                        gfm: gfm,\n                                        toc: toc,\n                                        tocm: tocm,\n                                        tocStartLevel: tocStartLevel,\n                                        tocTitle: tocTitle,\n                                        tocDropdown: tocDropdown,\n                                        tocContainer: tocContainer,\n                                        markdown: markdown,\n                                        markdownSourceCode: markdownSourceCode,\n                                        htmlDecode: htmlDecode,\n                                        autoLoadKaTeX: autoLoadKaTeX,\n                                        pageBreak: pageBreak,\n                                        atLink: atLink, // for @link\n                                        emailLink: emailLink, // for mail address auto link\n                                        tex: tex,\n                                        taskList: taskList, // Github Flavored Markdown task lists\n                                        emoji: emoji,\n                                        flowChart: flowChart,\n                                        sequenceDiagram: sequenceDiagram,\n                                        previewCodeHighlight: previewCodeHighlight\n                                    });\n                                });\n\n                            case 6:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            function componentDidMount() {\n                return _ref2.apply(this, arguments);\n            }\n\n            return componentDidMount;\n        }()\n    }, {\n        key: '_init',\n        value: function _init(path, cb) {\n            function createDom(str) {\n                return document.createElement(str);\n            }\n\n            var div = createDom('div');\n            var id = 'EditorInitDom' + new Date().getTime();\n            div.id = id;\n            div.style.display = 'none';\n\n            var textarea = createDom('textarea');\n            div.appendChild(textarea);\n\n            document.body.appendChild(div);\n            // 加载静态资源，避免手动引入\n            // Editor.md如果原生支持，就不用这样hack了\n            editormd(id, {\n                path: path,\n                codeFold: true,\n                saveHTMLToTextarea: true, // 保存 HTML 到 Textarea\n                searchReplace: true,\n                htmlDecode: \"style,script,iframe|on*\", // 开启 HTML 标签解析，为了安全性，默认不开启\n                emoji: true,\n                taskList: true,\n                tocm: true, // Using [TOCM]\n                tex: true, // 开启科学公式TeX语言支持，默认关闭\n                flowChart: true, // 开启流程图支持，默认关闭\n                sequenceDiagram: true, // 开启时序/序列图支持，默认关闭,\n                imageUpload: true,\n                imageFormats: [\"jpg\", \"jpeg\", \"gif\", \"png\", \"bmp\", \"webp\"]\n            });\n\n            // 检测静态资源是否加载完毕\n            var timer = setInterval(function () {\n                try {\n                    if (_ && Diagram && flowchart) {\n                        clearInterval(timer);\n                        document.body.removeChild(div);\n\n                        cb();\n                    }\n                } catch (e) {}\n            }, 100);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                config = _props.config,\n                others = (0, _objectWithoutProperties3.default)(_props, ['config']);\n\n            config = (0, _assign2.default)({}, defaultShowConfig, config);\n\n            var _config3 = config,\n                id = _config3.id;\n\n            return _react2.default.createElement('div', (0, _extends3.default)({ id: id }, others));\n        }\n    }]);\n    return EditorShow;\n}(_react.Component);\n\nEditorShow.defaultProps = {\n    config: {}\n};\n\n\nEditor.EditorShow = EditorShow;\nexports.default = Editor;",null]}