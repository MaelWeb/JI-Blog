{"remainingRequest":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js?{\"presets\":[]}!/Users/mael.liang/Workspace/node-koa-test/web/components/CommentInput/index.js","dependencies":[{"path":"/Users/mael.liang/Workspace/node-koa-test/web/components/CommentInput/index.js","mtime":1517553126151},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Icon = require('../Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _data = require('./data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _Emoji = require('../Emoji');\n\nvar _Emoji2 = _interopRequireDefault(_Emoji);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CommentInput = function (_Component) {\n    (0, _inherits3.default)(CommentInput, _Component);\n\n    function CommentInput(props) {\n        (0, _classCallCheck3.default)(this, CommentInput);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (CommentInput.__proto__ || (0, _getPrototypeOf2.default)(CommentInput)).call(this, props));\n\n        _this.addEmoji = function (event) {\n            _this.caretIndex = _this.getCaretPosition();\n            _this.setCaretPosition(_this.caretIndex);\n            _this.insertText(event.target.title);\n        };\n\n        _this.toggleEmoji = function () {\n            _this.caretIndex = _this.getCaretPosition();\n            _this.setState(function (preState) {\n                return { showEmoji: !preState.showEmoji };\n            }, function () {\n                _this.setCaretPosition(_this.caretIndex);\n            });\n        };\n\n        _this.exportComment = function () {\n            var commentCont = _this.refs.commentText.value;\n            _this.props.exportComment(commentCont);\n        };\n\n        _this.clearTextarea = function () {\n            _this.textareaDom.value = '';\n        };\n\n        _this.state = {\n            showEmoji: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(CommentInput, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            // this.textareaDom = document.getElementById(this.textareaId);\n            this.textareaDom = _reactDom2.default.findDOMNode(this.refs.commentText);\n        }\n    }, {\n        key: 'getCaretPosition',\n\n\n        //获取光标位置\n        value: function getCaretPosition() {\n            var CaretPos = 0;\n            if (document.selection) {\n                // IE Support\n                this.textareaDom.focus();\n                var Sel = document.selection.createRange();\n                Sel.moveStart('character', -this.textareaDom.value.length);\n                CaretPos = Sel.text.length;\n            } else if (this.textareaDom.selectionStart || this.textareaDom.selectionStart == '0') {\n                // Firefox support\n                CaretPos = this.textareaDom.selectionStart;\n            }\n\n            return CaretPos;\n        }\n\n        //设置光标位置函数\n\n    }, {\n        key: 'setCaretPosition',\n        value: function setCaretPosition(pos) {\n            if (this.textareaDom.setSelectionRange) {\n                this.textareaDom.focus();\n                this.textareaDom.setSelectionRange(pos, pos);\n            } else if (this.textareaDom.createTextRange) {\n                var range = this.textareaDom.createTextRange();\n                range.collapse(true);\n                range.moveEnd('character', pos);\n                range.moveStart('character', pos);\n                range.select();\n            }\n        }\n    }, {\n        key: 'insertText',\n        value: function insertText(str) {\n            if (document.selection) {\n                this.textareaDom.focus();\n                var sel = document.selection.createRange();\n                sel.text = str;\n            } else if (typeof this.textareaDom.selectionStart === 'number' && typeof this.textareaDom.selectionEnd === 'number') {\n                var startPos = this.textareaDom.selectionStart,\n                    endPos = this.textareaDom.selectionEnd,\n                    cursorPos = startPos,\n                    tmpStr = this.textareaDom.value;\n                this.textareaDom.value = tmpStr.substring(0, startPos) + str + tmpStr.substring(endPos, tmpStr.length);\n                cursorPos += str.length;\n                this.textareaDom.selectionStart = this.textareaDom.selectionEnd = cursorPos;\n            } else {\n                this.textareaDom.value += str;\n            }\n            this.caretIndex = this.getCaretPosition();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var showEmoji = this.state.showEmoji;\n            var _props = this.props,\n                isShowBtn = _props.isShowBtn,\n                className = _props.className;\n\n            return _react2.default.createElement(\n                'div',\n                { className: (0, _classnames2.default)(\"blog-comment-input\", (0, _defineProperty3.default)({}, className, className)) },\n                _react2.default.createElement('textarea', { rows: '4', ref: 'commentText', placeholder: '\\u4F60\\u4E0D\\u60F3\\u8BF4\\u70B9\\u5565\\u4E48\\uFF1F' }),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'btn clearfix' },\n                    _react2.default.createElement(_Icon2.default, { type: 'emoji', className: 'fl', onClick: this.toggleEmoji }),\n                    isShowBtn ? _react2.default.createElement(\n                        'button',\n                        { onClick: this.exportComment },\n                        '\\u53D1\\u5E03'\n                    ) : null\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: (0, _classnames2.default)(\"emoji-box\", { show: showEmoji }), id: 'CommentEmoji' },\n                    _react2.default.createElement(\n                        _Emoji2.default,\n                        { style: { height: 20, cursor: 'pointer' }, onClick: this.addEmoji },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'emoji-wrap' },\n                            _data2.default\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return CommentInput;\n}(_react.Component);\n\nCommentInput.defaultProps = {\n    exportComment: function exportComment() {},\n    isShowBtn: true\n};\nCommentInput.defaultPropTypes = {\n    exportComment: _propTypes2.default.func,\n    isShowBtn: _propTypes2.default.boolen\n};\nexports.default = CommentInput;",null]}