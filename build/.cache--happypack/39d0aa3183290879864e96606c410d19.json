{"remainingRequest":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js?{\"presets\":[\"react-hmre\"]}!/Users/mael.liang/Workspace/node-koa-test/web/components/Toucher/index.js","dependencies":[{"path":"/Users/mael.liang/Workspace/node-koa-test/web/components/Toucher/index.js","mtime":1512366771000},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/mael.liang/Workspace/node-koa-test/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _index = require('/Users/mael.liang/Workspace/node-koa-test/node_modules/redbox-react/lib/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('/Users/mael.liang/Workspace/node-koa-test/node_modules/react-transform-catch-errors/lib/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _react2 = require('react');\n\nvar _react3 = _interopRequireDefault(_react2);\n\nvar _index5 = require('/Users/mael.liang/Workspace/node-koa-test/node_modules/react-transform-hmr/lib/index.js');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _components = {\n    Toucher: {\n        displayName: 'Toucher'\n    }\n};\n\nvar _UsersMaelLiangWorkspaceNodeKoaTestNode_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({\n    filename: '/Users/mael.liang/Workspace/node-koa-test/web/components/Toucher/index.js',\n    components: _components,\n    locals: [module],\n    imports: [_react3.default]\n});\n\nvar _UsersMaelLiangWorkspaceNodeKoaTestNode_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({\n    filename: '/Users/mael.liang/Workspace/node-koa-test/web/components/Toucher/index.js',\n    components: _components,\n    locals: [],\n    imports: [_react3.default, _index2.default]\n});\n\nfunction _wrapComponent(id) {\n    return function (Component) {\n        return _UsersMaelLiangWorkspaceNodeKoaTestNode_modulesReactTransformHmrLibIndexJs2(_UsersMaelLiangWorkspaceNodeKoaTestNode_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);\n    };\n} /*\n   * react toucher (移动端手势库)\n   *\n   * 支持事件：singleTap(轻击), doubleTap(双击), longTap(长按), swipeUp(上划), swipeRight(右划), swipeDown(下划), swipeleft(左划)\n   *\n   * Use: <Toucher onSwipeLeft={ this.swipeLeft.bind(this) } ></Toucher>\n   *\n   * create by mael\n   */\n\n\nvar Toucher = _wrapComponent('Toucher')(function (_React$Component) {\n    (0, _inherits3.default)(Toucher, _React$Component);\n\n    function Toucher(props) {\n        (0, _classCallCheck3.default)(this, Toucher);\n\n        //轻击开始时间\n        var _this2 = (0, _possibleConstructorReturn3.default)(this, (Toucher.__proto__ || (0, _getPrototypeOf2.default)(Toucher)).call(this, props));\n\n        _this2.touchStartTime = 0;\n\n        //记录上一次点击时间\n        _this2.lastTouchTime = 0;\n\n        //记录初始轻击的位置\n        _this2.x1, _this2.y1, _this2.x2, _this2.y2;\n\n        //轻击事件的延时器\n        _this2.touchDelay;\n\n        //测试长按事件的延时器\n        _this2.longTap;\n\n        //记录当前事件是否已为等待结束的状态\n        _this2.isActive = false;\n        //记录有坐标信息的事件\n        _this2.eventMark = null;\n\n        // 事件堆\n        _this2._events = {};\n        return _this2;\n    }\n\n    (0, _createClass3.default)(Toucher, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.DOM = (0, _reactDom.findDOMNode)(this);\n            this._events = this.props;\n            this.eventListener();\n        }\n    }, {\n        key: 'eventListener',\n        value: function eventListener() {\n            /**\n             * 对开始手势的监听\n             */\n            this.DOM.addEventListener('touchstart', this.touchStart.bind(this));\n            this.DOM.addEventListener('MSPointerDown', this.touchStart.bind(this));\n            this.DOM.addEventListener('pointerdown', this.touchStart.bind(this));\n\n            /**\n             * 对手势结束的监听（轻击）\n             */\n            this.DOM.addEventListener('touchend', this.touchend.bind(this));\n            this.DOM.addEventListener('MSPointerUp', this.touchend.bind(this));\n            this.DOM.addEventListener('pointerup', this.touchend.bind(this));\n\n            /**\n             * 对移动手势的监听\n             */\n            this.DOM.addEventListener('touchmove', this.touchmove.bind(this));\n            this.DOM.addEventListener('MSPointerMove', this.touchmove.bind(this));\n            this.DOM.addEventListener('pointermove', this.touchmove.bind(this));\n\n            /**\n             * 对移动结束的监听\n             */\n            this.DOM.addEventListener('touchcancel', this.actionOver.bind(this));\n            this.DOM.addEventListener('MSPointerCancel', this.actionOver.bind(this));\n            this.DOM.addEventListener('pointercancel', this.actionOver.bind(this));\n        }\n    }, {\n        key: 'actionOver',\n        value: function actionOver(e) {\n            this.isActive = false;\n            clearTimeout(this.longTap);\n            clearTimeout(this.touchDelay);\n        }\n\n        /**\n         * 执行绑定的回调函数，并创建一个事件对象\n         * @param[string]事件名\n         * @param[function]被执行掉的函数\n         * @param[object]指向的dom\n         * @param[object]原生event对象\n         */\n\n    }, {\n        key: 'event_callback',\n        value: function event_callback(name, e) {\n            //优先使用自定义的touches（目前是为了解决touchEnd无touches的问题）\n            var touches = e.plugTouches || e.touches,\n                touch = touches.length ? touches[0] : {},\n                newE = {\n                type: name,\n                target: this.DOM,\n                pageX: touch.pageX,\n                pageY: touch.pageY,\n                clientX: touch.clientX || 0,\n                clientY: touch.clientY || 0\n            };\n            //为swipe事件增加交互初始位置及移动距离\n            if (name.match(/^onSwipe/) && e.plugStartPosition) {\n                newE.startX = e.plugStartPosition.pageX;\n                newE.startY = e.plugStartPosition.pageY;\n                newE.moveX = newE.pageX - newE.startX;\n                newE.moveY = newE.pageY - newE.startY;\n            }\n            //执行绑定事件的回调，并记录返回值\n            // var call_result = fn.call(dom, newE);\n            var call_result = this._events[name](newE);\n            //若返回false，阻止浏览器默认事件\n            if (call_result == false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n\n        /**\n         * @method 事件触发器\n         * @description 根据事件最原始被触发的target，逐级向上追溯事件绑定\n         *\n         * @param string 事件名\n         * @param object 原生事件对象\n         */\n\n    }, {\n        key: 'EMIT',\n        value: function EMIT(eventName, e) {\n            this._events = this._events || this.props;\n            //事件堆无该事件，结束触发\n            if (!this._events[eventName]) {\n                return;\n            }\n\n            //从事件源：target开始向上冒泡\n            var target = e.target;\n            while (1) {\n                //若已经冒泡至顶，检测顶级绑定，结束冒泡\n                if (target == this.DOM || !target) {\n                    var callback = this._events[eventName];\n                    this.event_callback(eventName, e);\n                    return;\n                }\n\n                //向上冒泡\n                target = target.parentNode;\n            }\n        }\n    }, {\n        key: 'isSingleTap',\n        value: function isSingleTap() {\n            this.actionOver();\n            this.EMIT('onSingleTap', this.eventMark);\n        }\n    }, {\n        key: 'touchStart',\n        value: function touchStart(e) {\n            if (!e.touches) return;\n            //缓存事件\n            this.eventMark = e;\n            this.x1 = e.touches[0].pageX;\n            this.y1 = e.touches[0].pageY;\n            this.x2 = 0;\n            this.y2 = 0;\n            this.isActive = true;\n            this.touchStartTime = new Date();\n            this.EMIT('onSwipeStart', e);\n            //检测是否为长按\n            clearTimeout(this.longTap);\n\n            var _this = this;\n            this.longTap = setTimeout(function () {\n                _this.actionOver(e);\n                //断定此次事件为长按事件\n                _this.EMIT('onLongTap', e);\n            }, 500);\n        }\n    }, {\n        key: 'touchend',\n        value: function touchend(e) {\n            //touchend中，拿不到坐标位置信息，故使用全局保存下数据\n            e.plugStartPosition = this.eventMark.plugStartPosition;\n            e.plugTouches = this.eventMark.touches;\n            this.EMIT('onSwipeEnd', e);\n            if (!this.isActive) {\n                return;\n            }\n            var now = new Date();\n            //若未监听doubleTap，直接响应\n            if (!this._events.doubleTap || this._events.doubleTap.length == 0) {\n                this.isSingleTap();\n            } else if (now - this.lastTouchTime > 200) {\n                //延迟响应\n                this.touchDelay = setTimeout(this.isSingleTap, 190);\n            } else {\n                clearTimeout(this.touchDelay);\n                this.actionOver(e);\n                //断定此次事件为连续两次轻击事件\n                this.EMIT('onDoubleTap', eventMark);\n            }\n            this.lastTouchTime = now;\n        }\n    }, {\n        key: 'touchmove',\n        value: function touchmove(e) {\n            if (!e.touches) return;\n            //缓存事件\n            this.eventMark = e;\n            //在原生事件基础上记录初始位置（为swipe事件增加参数传递）\n            e.plugStartPosition = {\n                pageX: this.x1,\n                pageY: this.y1\n            };\n\n            //断定此次事件为移动事件\n            this.EMIT('onSwipe', e);\n            if (!this.isActive) {\n                return;\n            }\n            this.x2 = e.touches[0].pageX;\n            this.y2 = e.touches[0].pageY;\n            if (Math.abs(this.x1 - this.x2) > 2 || Math.abs(this.y1 - this.y2) > 2) {\n                //断定此次事件为移动手势\n                var direction = this.swipeDirection(this.x1, this.x2, this.y1, this.y2);\n                this.EMIT('onSwipe' + direction, e);\n            } else {\n                //断定此次事件为轻击事件\n                this.isSingleTap();\n            }\n            this.actionOver(e);\n        }\n    }, {\n        key: 'swipeDirection',\n        value: function swipeDirection(x1, x2, y1, y2) {\n            return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? 'Left' : 'Right' : y1 - y2 > 0 ? 'Up' : 'Down';\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                children = _props.children,\n                className = _props.className,\n                style = _props.style,\n                others = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'style']);\n\n            return _react3.default.createElement(\n                'div',\n                { className: className, style: style },\n                children\n            );\n        }\n    }]);\n    return Toucher;\n}(_react3.default.Component));\n\nexports.default = Toucher;",{"version":3,"sources":["web/components/Toucher/index.js"],"names":["props","touchStartTime","lastTouchTime","x1","y1","x2","y2","touchDelay","longTap","isActive","eventMark","_events","DOM","eventListener","addEventListener","touchStart","bind","touchend","touchmove","actionOver","e","clearTimeout","name","touches","plugTouches","touch","length","newE","type","target","pageX","pageY","clientX","clientY","match","plugStartPosition","startX","startY","moveX","moveY","call_result","preventDefault","stopPropagation","eventName","callback","event_callback","parentNode","EMIT","Date","_this","setTimeout","now","doubleTap","isSingleTap","Math","abs","direction","swipeDirection","children","className","style","others","Component"],"mappings":"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","file":"index.js","sourceRoot":"/Users/mael.liang/Workspace/node-koa-test","sourcesContent":["/*\n * react toucher (移动端手势库)\n *\n * 支持事件：singleTap(轻击), doubleTap(双击), longTap(长按), swipeUp(上划), swipeRight(右划), swipeDown(下划), swipeleft(左划)\n *\n * Use: <Toucher onSwipeLeft={ this.swipeLeft.bind(this) } ></Toucher>\n *\n * create by mael\n */\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\n\nexport default class Toucher extends React.Component {\n    constructor(props) {\n        super(props)\n\n        //轻击开始时间\n        this.touchStartTime = 0;\n\n        //记录上一次点击时间\n        this.lastTouchTime = 0;\n\n        //记录初始轻击的位置\n        this.x1, this.y1, this.x2, this.y2;\n\n        //轻击事件的延时器\n        this.touchDelay;\n\n        //测试长按事件的延时器\n        this.longTap;\n\n        //记录当前事件是否已为等待结束的状态\n        this.isActive = false;\n        //记录有坐标信息的事件\n        this.eventMark = null;\n\n        // 事件堆\n        this._events = {};\n    }\n\n    componentDidMount() {\n        this.DOM = findDOMNode(this);\n        this._events = this.props;\n        this.eventListener();\n    }\n\n    eventListener() {\n        /**\n         * 对开始手势的监听\n         */\n        this.DOM.addEventListener('touchstart', this.touchStart.bind(this));\n        this.DOM.addEventListener('MSPointerDown', this.touchStart.bind(this));\n        this.DOM.addEventListener('pointerdown', this.touchStart.bind(this));\n\n        /**\n         * 对手势结束的监听（轻击）\n         */\n        this.DOM.addEventListener('touchend', this.touchend.bind(this));\n        this.DOM.addEventListener('MSPointerUp', this.touchend.bind(this));\n        this.DOM.addEventListener('pointerup', this.touchend.bind(this));\n\n        /**\n         * 对移动手势的监听\n         */\n        this.DOM.addEventListener('touchmove', this.touchmove.bind(this));\n        this.DOM.addEventListener('MSPointerMove', this.touchmove.bind(this));\n        this.DOM.addEventListener('pointermove', this.touchmove.bind(this));\n\n        /**\n         * 对移动结束的监听\n         */\n        this.DOM.addEventListener('touchcancel', this.actionOver.bind(this));\n        this.DOM.addEventListener('MSPointerCancel', this.actionOver.bind(this));\n        this.DOM.addEventListener('pointercancel', this.actionOver.bind(this));\n\n    }\n\n    actionOver(e) {\n        this.isActive = false;\n        clearTimeout(this.longTap);\n        clearTimeout(this.touchDelay);\n    }\n\n    /**\n     * 执行绑定的回调函数，并创建一个事件对象\n     * @param[string]事件名\n     * @param[function]被执行掉的函数\n     * @param[object]指向的dom\n     * @param[object]原生event对象\n     */\n    event_callback(name, e) {\n        //优先使用自定义的touches（目前是为了解决touchEnd无touches的问题）\n        var touches = e.plugTouches || e.touches,\n            touch = touches.length ? touches[0] : {},\n            newE = {\n                type: name,\n                target: this.DOM,\n                pageX: touch.pageX,\n                pageY: touch.pageY,\n                clientX: touch.clientX || 0,\n                clientY: touch.clientY || 0\n            };\n            //为swipe事件增加交互初始位置及移动距离\n        if (name.match(/^onSwipe/) && e.plugStartPosition) {\n            newE.startX = e.plugStartPosition.pageX;\n            newE.startY = e.plugStartPosition.pageY;\n            newE.moveX = newE.pageX - newE.startX;\n            newE.moveY = newE.pageY - newE.startY;\n        }\n        //执行绑定事件的回调，并记录返回值\n        // var call_result = fn.call(dom, newE);\n        let call_result = this._events[name](newE);\n        //若返回false，阻止浏览器默认事件\n        if (call_result == false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n\n    /**\n     * @method 事件触发器\n     * @description 根据事件最原始被触发的target，逐级向上追溯事件绑定\n     *\n     * @param string 事件名\n     * @param object 原生事件对象\n     */\n    EMIT(eventName, e) {\n        this._events = this._events || this.props;\n        //事件堆无该事件，结束触发\n        if (!this._events[eventName]) {\n            return;\n        }\n\n        //从事件源：target开始向上冒泡\n        var target = e.target;\n        while (1) {\n            //若已经冒泡至顶，检测顶级绑定，结束冒泡\n            if (target == this.DOM || !target) {\n                let callback = this._events[eventName];\n                this.event_callback(eventName, e);\n                return;\n            }\n\n            //向上冒泡\n            target = target.parentNode;\n        }\n    }\n\n    isSingleTap() {\n        this.actionOver();\n        this.EMIT('onSingleTap', this.eventMark);\n    }\n\n    touchStart(e) {\n        if (!e.touches) return;\n        //缓存事件\n        this.eventMark = e;\n        this.x1 = e.touches[0].pageX;\n        this.y1 = e.touches[0].pageY;\n        this.x2 = 0;\n        this.y2 = 0;\n        this.isActive = true;\n        this.touchStartTime = new Date();\n        this.EMIT('onSwipeStart', e);\n        //检测是否为长按\n        clearTimeout(this.longTap);\n\n        let _this = this;\n        this.longTap = setTimeout(function() {\n            _this.actionOver(e);\n            //断定此次事件为长按事件\n            _this.EMIT('onLongTap', e);\n        }, 500);\n    }\n\n    touchend(e) {\n        //touchend中，拿不到坐标位置信息，故使用全局保存下数据\n        e.plugStartPosition = this.eventMark.plugStartPosition;\n        e.plugTouches = this.eventMark.touches;\n        this.EMIT('onSwipeEnd', e);\n        if (!this.isActive) {\n            return;\n        }\n        var now = new Date();\n        //若未监听doubleTap，直接响应\n        if (!this._events.doubleTap || this._events.doubleTap.length == 0) {\n            this.isSingleTap();\n        } else if (now - this.lastTouchTime > 200) {\n            //延迟响应\n            this.touchDelay = setTimeout(this.isSingleTap, 190);\n        } else {\n            clearTimeout(this.touchDelay);\n            this.actionOver(e);\n            //断定此次事件为连续两次轻击事件\n            this.EMIT('onDoubleTap', eventMark);\n        }\n        this.lastTouchTime = now;\n    }\n\n    touchmove(e) {\n        if (!e.touches) return;\n        //缓存事件\n        this.eventMark = e;\n        //在原生事件基础上记录初始位置（为swipe事件增加参数传递）\n        e.plugStartPosition = {\n            pageX: this.x1,\n            pageY: this.y1\n        };\n\n        //断定此次事件为移动事件\n        this.EMIT('onSwipe', e);\n        if (!this.isActive) {\n            return;\n        }\n        this.x2 = e.touches[0].pageX;\n        this.y2 = e.touches[0].pageY;\n        if (Math.abs(this.x1 - this.x2) > 2 || Math.abs(this.y1 - this.y2) > 2) {\n            //断定此次事件为移动手势\n            var direction = this.swipeDirection(this.x1, this.x2, this.y1, this.y2);\n            this.EMIT('onSwipe' + direction, e);\n        } else {\n            //断定此次事件为轻击事件\n            this.isSingleTap();\n        }\n        this.actionOver(e);\n    }\n\n    swipeDirection(x1, x2, y1, y2) {\n        return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down');\n    }\n\n    render() {\n        const { children, className, style, ...others } = this.props;\n        return (\n            <div className={className} style={style}>{ children }</div>\n        )\n    }\n}"]}]}